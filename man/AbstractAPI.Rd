% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AbstractAPI.R
\name{AbstractAPI}
\alias{AbstractAPI}
\title{AbstractAPI R6 Class}
\description{
This class provides a template for creating API clients that
require token authentication. It additionally provides a method of
connecting to a storr object for caching API responses, validating params
against a list of valid keys, and provides an interface for CRUD
operations
}
\seealso{
Other API: 
\code{\link{PromoterSetSigAPI}},
\code{\link{RankResponseAPI}}
}
\concept{API}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{id}}{A unique identifier for the instance}

\item{\code{token}}{The authentication token for the API}

\item{\code{header}}{The http authorization header}

\item{\code{url}}{The URL for the API. When this is set,
it is checked for validity using the current token/header}

\item{\code{queue_name}}{The name of the queue for storing data in the storr
cache. This is used to retrieve data from the cache. By default, it
is set to the instance's unique ID.}

\item{\code{storr}}{The storr object for caching API responses.
This can be set to a user-provided storr object, or a default
storr object will be created using the rds driver.}

\item{\code{params}}{The ParamsList object containing parameters for the
API request.}

\item{\code{valid_param_keys}}{A character vector of valid parameter keys
for the API.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AbstractAPI-new}{\code{AbstractAPI$new()}}
\item \href{#method-AbstractAPI-push_params}{\code{AbstractAPI$push_params()}}
\item \href{#method-AbstractAPI-pop_params}{\code{AbstractAPI$pop_params()}}
\item \href{#method-AbstractAPI-create}{\code{AbstractAPI$create()}}
\item \href{#method-AbstractAPI-read}{\code{AbstractAPI$read()}}
\item \href{#method-AbstractAPI-update}{\code{AbstractAPI$update()}}
\item \href{#method-AbstractAPI-delete}{\code{AbstractAPI$delete()}}
\item \href{#method-AbstractAPI-clone}{\code{AbstractAPI$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-new"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-new}{}}}
\subsection{Method \code{new()}}{
Initializes the API client
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$new(
  url = Sys.getenv("BASE_URL"),
  token = Sys.getenv("TOKEN"),
  valid_param_keys = NULL,
  params = list(),
  queue_name = NULL,
  storr = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The API endpoint URL.}

\item{\code{token}}{The authentication token. Defaults to the \code{TOKEN}
environment variable.}

\item{\code{valid_param_keys}}{A character vector of valid parameter keys for
the API.}

\item{\code{params}}{A ParamsList object containing parameters for the
API request.}

\item{\code{queue_name}}{This will be used to store data pulled from the
database in a cache for fast retrieval. Any instantiation with the
same \code{queue_name} will have access to the same cache. By default,
it will be set to the instances unique ID}

\item{\code{storr}}{The storr object for caching API responses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{AbstractAPI} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-push_params"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-push_params}{}}}
\subsection{Method \code{push_params()}}{
Adds or updates parameters in the ParamsList.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$push_params(params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{A list of key-value pairs to add or update.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-pop_params"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-pop_params}{}}}
\subsection{Method \code{pop_params()}}{
Removes parameters from the ParamsList.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$pop_params(keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{A vector of keys to remove. If NULL, the params are set to
an empty ParamsList()}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-create"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-create}{}}}
\subsection{Method \code{create()}}{
Placeholder for the create method. Raises an error if
not implemented.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$create(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data to create.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-read"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-read}{}}}
\subsection{Method \code{read()}}{
Placeholder for the read method. Raises an error if
implemented.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$read()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the resource to read.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-update"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-update}{}}}
\subsection{Method \code{update()}}{
Placeholder for the update method. Raises an error if
not implemented.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$update(id, data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the resource to update.}

\item{\code{data}}{The data to update.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-delete"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-delete}{}}}
\subsection{Method \code{delete()}}{
Placeholder for the delete method. Raises an error if
not implemented.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$delete(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the resource to delete.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractAPI-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractAPI-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractAPI$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
