% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PromoterSetSigAPI.R
\name{PromoterSetSigAPI}
\alias{PromoterSetSigAPI}
\title{PromoterSetSig R6 Class}
\value{
A PromoterSetSigAPI object
}
\description{
PromoterSetSig R6 Class

PromoterSetSig R6 Class
}
\details{
An R6 class to interact with the PromoterSetSig endpoint.
}
\seealso{
Other API: 
\code{\link{AbstractAPI}},
\code{\link{RankResponseAPI}}
}
\concept{API}
\section{Super class}{
\code{yeastCCDBShiny::AbstractAPI} -> \code{PromoterSetSigAPI}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PromoterSetSigAPI-new}{\code{PromoterSetSigAPI$new()}}
\item \href{#method-PromoterSetSigAPI-read}{\code{PromoterSetSigAPI$read()}}
\item \href{#method-PromoterSetSigAPI-clone}{\code{PromoterSetSigAPI$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="create"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-create'><code>yeastCCDBShiny::AbstractAPI$create()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="delete"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-delete'><code>yeastCCDBShiny::AbstractAPI$delete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="pop_params"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-pop_params'><code>yeastCCDBShiny::AbstractAPI$pop_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="push_params"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-push_params'><code>yeastCCDBShiny::AbstractAPI$push_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="update"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-update'><code>yeastCCDBShiny::AbstractAPI$update()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PromoterSetSigAPI-new"></a>}}
\if{latex}{\out{\hypertarget{method-PromoterSetSigAPI-new}{}}}
\subsection{Method \code{new()}}{
Initialize the PromoterSetSigAPI object. This will serve
as an interface to the PromoterSetSig endpoint of both the database
and the application cache
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PromoterSetSigAPI$new(url = Sys.getenv("PROMOTERSETSIG_URL"), ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{the URL of the PromoterSetSig endpoint}

\item{\code{...}}{additional parameters to pass to \code{\link{AbstractAPI}}.
See the new() method section.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PromoterSetSigAPI-read"></a>}}
\if{latex}{\out{\hypertarget{method-PromoterSetSigAPI-read}{}}}
\subsection{Method \code{read()}}{
Retrieve data from the PromoterSetSig endpoint. This will
always return the metadata that matches your query -- if no params
are set, then the entire PromoterSetSig table is returned. Setting
the retrieve_files to \code{TRUE} will mean that the data is also retrieved
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PromoterSetSigAPI$read(
  callback = function(metadata, data, storr, ...) {
     list(metadata, data)
 },
  retrieve_files = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{callback}}{a function to call with the metadata from the Rank
Response API. The first parameter of the callback must be \code{metadata}.
The callback will be called with the metadata from the Rank Response
API as the first parameter, and any additional parameters passed to
this function as additional parameters.}

\item{\code{retrieve_files}}{Boolean. Whether to retrieve the files associated
with the records retrieved by the GET request according to the params.
Defaults to FALSE.}

\item{\code{...}}{additional parameters to pass to the callback}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PromoterSetSigAPI-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PromoterSetSigAPI-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PromoterSetSigAPI$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
