% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AbstractRecordsOnlyAPI.R
\name{AbstractRecordsOnlyAPI}
\alias{AbstractRecordsOnlyAPI}
\title{An Abstract R6 Class for Records Only API Endpoints}
\value{
A AbstractRecordsOnlyAPI object
}
\description{
An R6 class for CRUD operations on records only
(no file storage) endpoints
}
\seealso{
Other API: 
\code{\link{AbstractAPI}},
\code{\link{AbstractRecordsAndFilesAPI}},
\code{\link{BindingManualQCAPI}},
\code{\link{DataSourceAPI}},
\code{\link{ExpressionAPI}},
\code{\link{ExpressionManualQCAPI}},
\code{\link{FileFormatAPI}},
\code{\link{GenomicFeatureAPI}},
\code{\link{PromoterSetSigAPI}},
\code{\link{RankResponseAPI}},
\code{\link{RegulatorAPI}}
}
\concept{API}
\section{Super class}{
\code{yeastCCDBShiny::AbstractAPI} -> \code{AbstractRecordsOnlyAPI}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AbstractRecordsOnlyAPI-new}{\code{AbstractRecordsOnlyAPI$new()}}
\item \href{#method-AbstractRecordsOnlyAPI-read}{\code{AbstractRecordsOnlyAPI$read()}}
\item \href{#method-AbstractRecordsOnlyAPI-clone}{\code{AbstractRecordsOnlyAPI$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="create"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-create'><code>yeastCCDBShiny::AbstractAPI$create()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="delete"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-delete'><code>yeastCCDBShiny::AbstractAPI$delete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="pop_params"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-pop_params'><code>yeastCCDBShiny::AbstractAPI$pop_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="push_params"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-push_params'><code>yeastCCDBShiny::AbstractAPI$push_params()</code></a></span></li>
<li><span class="pkg-link" data-pkg="yeastCCDBShiny" data-topic="AbstractAPI" data-id="update"><a href='../../yeastCCDBShiny/html/AbstractAPI.html#method-AbstractAPI-update'><code>yeastCCDBShiny::AbstractAPI$update()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractRecordsOnlyAPI-new"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractRecordsOnlyAPI-new}{}}}
\subsection{Method \code{new()}}{
Initialize the RecordsOnlyAPI object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractRecordsOnlyAPI$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{additional parameters to pass to AbstractAPI. If not
explicitly passed, AbstractAPI defaults are applied}

\item{\code{url}}{the base URL of the API}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractRecordsOnlyAPI-read"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractRecordsOnlyAPI-read}{}}}
\subsection{Method \code{read()}}{
Retrieve data from the endpoint. The data will be
returned as a dataframe. The callback function must take metadata,
data, and storr as parameters. The metadata will be a dataframe,
the data slot will be NULL, and the storr will be the storr object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractRecordsOnlyAPI$read(
  callback = function(metadata, data, storr, ...) {
     list(metadata, data)
 },
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{callback}}{the function to call with the data. Signature must
include \code{metadata}, \code{data}, and \code{storr} as parameters}

\item{\code{...}}{additional arguments to pass to the callback function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a future object which will resolve with whatever the output
of the callback function is
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AbstractRecordsOnlyAPI-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AbstractRecordsOnlyAPI-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AbstractRecordsOnlyAPI$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
